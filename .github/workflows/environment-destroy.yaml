name: Destroy an Environment

on:
  workflow_dispatch:
    inputs:
      componentRepoName: 
        description: 'The Name of the repository to be destroyed'
        required: true
      componentRepoOwner:
        description: 'The Owner of the repository to be destroyed'
        required: true

jobs:
  destroy-api:
    runs-on: ubuntu-latest
    steps:
    # - name: Checkout code
    #   uses: actions/checkout@v2
    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v1
    #   with:
    #     cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    # - name: Terraform Init
    #   run: terraform init
    #   working-directory: Terraform
    # - name: Terraform FMT
    #   run: terraform fmt
    #   working-directory: Terraform
    # - name: Terraform Validate
    #   run: terraform validate
    #   working-directory: Terraform
    # - name: Terraform Destroy
    #   run: terraform destroy -var clusterName=${{ github.event.inputs.clusterName }} -var awsRegion=${{ github.event.inputs.awsRegion }} -auto-approve
    #   working-directory: Terraform

    - name: Delete GitHub Repository
      run: |
        echo "Deleting GitHub Repository $componentRepoName"
        curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        https://api.github.com/repos/$componentRepoOwner/$componentRepoName
        echo "GitHub Repository $componentRepoName deleted"

    # - name: Unregister subdomain from Route53
    #   run: |
    #     echo "Unregistering subdomain from Route53"
    #     aws route53domains delete-domain \
    #       --domain-name ${{ github.event.inputs.subdomain }} \
    #       --region ${{ github.event.inputs.awsRegion }} \
    #       --profile ${{ secrets.AWS_PROFILE }}
    #     echo "Subdomain ${{ github.event.inputs.subdomain }} unregistered from Route53"


